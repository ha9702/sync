sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageToast","sap/m/MessagePopover","sap/m/MessageItem","sap/ui/core/message/Message","sap/ui/core/MessageType","sap/ui/model/ValidateException","sap/ui/core/Core"],function(e,t,a,s,r,i,o,d,n){"use strict";return e.extend("sync.zec.sales1.controller.Payment",{onInit:function(){var e=this.getOwnerComponent().getModel("cart");this.getView().setModel(e);var t=sap.ui.core.UIComponent.getRouterFor(this);var a=t.getRoute("RoutePayment");if(a){a.attachPatternMatched(this._onPatternMatched,this)}var i=t.getRoute("RouteSummary");if(i){i.attachPatternMatched(this._onSummaryPatternMatched,this)}e.setProperty("/cardOwner","");e.setProperty("/cardNumber","");e.setProperty("/cvc","");e.setProperty("/expiryDate","");e.setProperty("/selectedPaymentType","Card");e.setProperty("/paymentTypeSelected",false);e.setProperty("/isCardInfoValid",false);this._oMessageManager=sap.ui.getCore().getMessageManager();this._oMessageManager.registerObject(this.getView(),true);var o=this._oMessageManager.getMessageModel();this.getView().setModel(o,"message");this._oMessagePopover=new s({items:{path:"message>/",template:new r({title:"{message>message}",type:"{message>type}",description:"{message>description}"})}});this.getView().byId("openMessagePopover").addDependent(this._oMessagePopover);o.attachPropertyChange(this.updateMessageCount.bind(this));this._loadDaumPostcodeScript().then(()=>{console.log("Daum Postcode script loaded successfully")}).catch(e=>{console.error("Failed to load Daum Postcode script:",e)})},updateMessageCount:function(){var e=this.getView().getModel("message");var t=e.getData();var a=t.length;var s=this.getView().byId("openMessagePopover");if(a>0){this._oMessagePopover.openBy(s)}else{this._oMessagePopover.close()}},onMessagePopoverPress:function(e){this._oMessagePopover.openBy(e.getSource())},addMessage:function(e,t,a,s){var r=this._oMessageManager;var o=r.getMessageModel().getData();var d=o.some(function(t){return t.message===e&&t.target===s});if(!d){var n=new i({message:e,description:t,type:a,target:s,processor:this.getView().getModel()});r.addMessages(n);this._oMessagePopover.openBy(this.getView().byId("openMessagePopover"))}},removeMessage:function(e){var t=this._oMessageManager;var a=t.getMessageModel().getData();a.filter(function(t){return t.target===e}).forEach(function(e){t.removeMessages(e)})},_onSummaryPatternMatched:function(e){},_onPatternMatched:function(e){var t=e.getParameter("arguments").cartItems;var a=JSON.parse(decodeURIComponent(t));var s=e.getParameter("arguments").sourceView;var r=this.getView().getModel("cart");r.setProperty("/cartItems",a);r.setProperty("/sourceView",s);var i=e.getParameter("arguments").stepId;if(i){this._goToStep(i)}},_goToStep:function(e){var t=this.byId("paymentWizard");var a=this.byId(e);if(a){t.discardProgress(a);t.goToStep(a)}},onPaymentTypeSelect:function(e){this.setPaymentMethod(e)},onNextStep:function(e){var t=this.byId("paymentWizard");t.nextStep();var a=e.getSource();var s=a.getId();if(a){a.setVisible(false)}},onNavBack:function(){var e=sap.ui.core.UIComponent.getRouterFor(this);var t=this.getView().getModel("cart");var a=t.getProperty("/sourceView");var s=t.oData.Before;console.log(s);if(s==="home"){e.navTo("RouteHome")}else if(s==="sub"){e.navTo("RouteSub")}else{e.navTo("RouteHome")}},validateCardInfo:function(){var e=this.getView();var t=e.byId("creditCardHolderName").getValueState()==="None"&&e.byId("creditCardHolderName").getValue().trim()!==""&&e.byId("creditCardNumber").getValueState()==="None"&&e.byId("creditCardNumber").getValue().trim()!==""&&e.byId("creditCardSecurityNumber").getValueState()==="None"&&e.byId("creditCardSecurityNumber").getValue().trim()!==""&&e.byId("creditCardExpirationDate").getValueState()==="None"&&e.byId("creditCardExpirationDate").getValue().trim()!=="";this.getView().getModel("cart").setProperty("/isCardInfoValid",t)},checkCardHolderName:function(e){var t=e.getSource();var a=t.getValue();var s=/^[a-zA-Z가-힣]+$/;var r=t.getId();if(a.length>=2&&s.test(a)){t.setValueState("None");this.removeMessage(r)}else{t.setValueState("Error");t.setValueStateText("");this.addMessage("유효한 값을 입력하십시오.","Cardholder's Name must be at least 2 characters long and contain only letters.",o.Error,r)}this.validateCardInfo()},checkCardNumber:function(e){var t=e.getSource();var a=t.getValue();var s=/^[0-9-]+$/;var r=a.length===19&&s.test(a);var i=t.getId();if(r){t.setValueState("None");this.removeMessage(i)}else{t.setValueState("Error");t.setValueStateText("");this.addMessage("유효한 카드번호를 입력해주세요.","Card Number must be 19 characters long.",o.Error,i)}this.validateCardInfo()},checkSecurityCode:function(e){var t=e.getSource();var a=t.getValue();var s=/^[0-9]{3}$/;var r=s.test(a);var i=t.getId();if(r){t.setValueState("None");this.removeMessage(i)}else{t.setValueState("Error");t.setValueStateText("");this.addMessage("유효한 cvc를 입력해주세요.","Security Code must be 3 digits long.",o.Error,i)}this.validateCardInfo()},checkExpirationDate:function(e){var t=e.getSource();var a=t.getValue();var s=/^(0[1-9]|1[0-2])\/\d{4}$/.test(a);var r=t.getId();if(!s){t.setValueState("Error");t.setValueStateText("");this.addMessage("유효한 날짜를 입력해주세요.","Expiration Date must be in MM/YYYY format.",o.Error,r);return}var i=a.split("/");var d=parseInt(i[0],10);var n=parseInt(i[1],10);var c=new Date;var u=c.getMonth()+1;var g=c.getFullYear();if(n<g||n===g&&d<u){t.setValueState("Error");this.addMessage("유효기간이 만료되었습니다.","The card expiration date is invalid.",o.Error,r)}else{t.setValueState("None");this.removeMessage(r)}this.validateCardInfo()},_loadDaumPostcodeScript:function(){return new Promise((e,t)=>{if(typeof daum!=="undefined"){e();return}var a=document.createElement("script");a.src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js";a.onload=()=>{console.log("Daum Postcode script loaded");e()};a.onerror=()=>{console.error("Failed to load Daum Postcode script");t(new Error("Failed to load Daum Postcode script"))};document.head.appendChild(a)})},onFindAddress:function(){console.log("onFindAddress 호출됨");if(typeof daum==="undefined"){console.error("Daum Postcode API 스크립트가 로드되지 않았습니다.");return}new daum.Postcode({oncomplete:function(e){console.log("API 호출 후 데이터 반환: ",e);var t="";var a="";if(e.userSelectedType==="R"){t=e.roadAddress}else{t=e.jibunAddress}if(e.userSelectedType==="R"){if(e.bname!==""&&/[동|로|가]$/g.test(e.bname)){a+=e.bname}if(e.buildingName!==""&&e.apartment==="Y"){a+=a!==""?", "+e.buildingName:e.buildingName}if(a!==""){a=" ("+a+")"}this.getView().byId("idExtraAddress").setValue(a)}else{this.getView().byId("idExtraAddress").setValue("")}this.getView().byId("idPostcode").setValue(e.zonecode);this.getView().byId("idAddress").setValue(t);this.getView().byId("idDetailAddress").focus()}.bind(this)}).open()},onCheck:function(){var e=this.getView().getModel("cart");var t=sap.ui.core.UIComponent.getRouterFor(this);var a={cartItems:e.getProperty("/cartItems"),selectedPaymentType:e.getProperty("/SelectedPayment"),cardOwner:e.getProperty("/cardOwner"),cardNumber:e.getProperty("/cardNumber"),cvc:e.getProperty("/cvc"),expiryDate:e.getProperty("/expiryDate"),totalPrice:e.getProperty("/totalPrice"),deliveryAddress:{postcode:this.getView().byId("idPostcode").getValue(),address:this.getView().byId("idAddress").getValue(),detailAddress:this.getView().byId("idDetailAddress").getValue(),extraAddress:this.getView().byId("idExtraAddress").getValue()}};e.setProperty("/summaryData",a);t.navTo("RouteSummary")},_calculateTotal:function(e){return e.reduce(function(e,t){return e+t.price*t.quantity},0)},onInputChange:function(){var e=this._checkAllInputFilled();this.getView().byId("checkButton").setEnabled(e)},_checkAllInputFilled:function(){var e=["idPostcode","idAddress","idDetailAddress","idExtraAddress"];return e.every(function(e){var t=this.getView().byId(e);return t&&t.getValue().trim()!==""},this)},onStepActivated:function(e){var t=e.getSource();var a=e.getParameter("step");var s=a.getId();switch(s){case this.createId("paymentTypeStep"):this._resetSteps();this.goToPaymentStep();break;case this.createId("cardInfoStep"):this.validateCardInfo();break;case this.createId("idDestination"):this.onInputChange();break;default:break}},goToPaymentStep:function(){var e=this.getView().getModel().getProperty("/SelectedPayment");var t=this.byId("paymentWizard");var a=this.byId("paymentTypeStep");switch(e){case"KakaoPay":a.setNextStep(this.byId("idDestination"));console.log("casekakao");break;case"Card":a.setNextStep(this.byId("cardInfoStep"));console.log("casecard");break;default:a.setNextStep(this.byId("cardInfoStep"));break}t.validateStep(a)},setPaymentMethod:function(e){var t=e.getParameter("key");var a=this.getView().getModel("cart");a.setProperty("/SelectedPayment",t);this._updateStepVisibility(t);this._resetSteps();this.goToPaymentStep();this.getView().byId("id3").setVisible(true);this.getView().byId("id4").setVisible(true);this.getView().byId("id4").setEnabled(false)},_resetSteps:function(){var e=this.byId("paymentWizard");var t=this.byId("paymentTypeStep");var a=this.byId("cardInfoStep");var s=this.byId("idDestination");e.discardProgress(t);e.discardProgress(a);e.discardProgress(s);this._clearInputFields(["creditCardHolderName","creditCardNumber","creditCardSecurityNumber","creditCardExpirationDate","idPostcode","idAddress","idDetailAddress","idExtraAddress"]);e.goToStep(t)},_clearInputFields:function(e){e.forEach(function(e){var t=this.getView().byId(e);if(t){t.setValue("");t.setValueState("None")}},this)},_updateStepVisibility:function(e){var t=this.getView();t.byId("cardInfoStep").setVisible(false);t.byId("idDestination").setVisible(false);switch(e){case"KakaoPay":t.byId("idDestination").setVisible(true);t.byId("paymentTypeStep").setIcon("sap-icon://money-bills");t.byId("idDestination").setIcon("sap-icon://shipping-status");break;case"Card":t.byId("cardInfoStep").setVisible(true);t.byId("idDestination").setVisible(true);t.byId("paymentTypeStep").setIcon("sap-icon://money-bills");t.byId("cardInfoStep").setIcon("sap-icon://credit-card");t.byId("idDestination").setIcon("sap-icon://shipping-status");break;default:t.byId("cardInfoStep").setVisible(true);t.byId("idDestination").setVisible(true);t.byId("paymentTypeStep").setIcon("sap-icon://money-bills");t.byId("cardInfoStep").setIcon("sap-icon://credit-card");t.byId("idDestination").setIcon("sap-icon://shipping-status");break}}})});
//# sourceMappingURL=Payment.controller.js.map