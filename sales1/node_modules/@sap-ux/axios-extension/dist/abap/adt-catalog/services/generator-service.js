"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneratorService = void 0;
const adt_service_1 = require("./adt-service");
/**
 *
 */
class GeneratorService extends adt_service_1.AdtService {
    /**
     * Get ADT scheme ID.
     *
     * @returns AdtCategory
     */
    static getAdtCatagory() {
        return GeneratorService.adtCategory;
    }
    /**
     * Get the UI service generator for the given business object.
     *
     * @param businessObjectName - The business object name.
     * @returns TBD
     */
    getUIServiceGeneratorConfig(businessObjectName) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.get('', {
                headers: {
                    Accept: 'application/atom+xml;type=feed'
                },
                params: {
                    referencedObject: `/sap/bc/adt/bo/behaviordefinitions/${businessObjectName.toLocaleLowerCase()}`
                }
            });
            const data = (_a = this.parseResponse(response.data).feed) === null || _a === void 0 ? void 0 : _a.entry;
            if ((data === null || data === void 0 ? void 0 : data.id) === 'ui-service' || (data === null || data === void 0 ? void 0 : data.id) === 'uiservice') {
                return data;
            }
            else {
                throw new Error('UI Service Generator not found');
            }
        });
    }
}
exports.GeneratorService = GeneratorService;
/**
 * @see AdtService.getAdtCatagory()
 */
GeneratorService.adtCategory = {
    scheme: 'http://www.sap.com/adt/categories/respository',
    term: 'generators'
};
//# sourceMappingURL=generator-service.js.map