"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublishService = void 0;
const adt_service_1 = require("./adt-service");
/**
 *
 */
class PublishService extends adt_service_1.AdtService {
    /**
     * Get ADT scheme ID.
     *
     * @returns AdtCategory
     */
    static getAdtCatagory() {
        return PublishService.adtCategory;
    }
    /**
     * Build the service binding content, used in the publish request.
     *
     * @param serviceType - The service type.
     * @param serviceBindingName - The service binding name.
     * @returns The service binding content.
     */
    buildServiceBindingContent(serviceType, serviceBindingName) {
        return `<?xml version="1.0" encoding="UTF-8"?><adtcore:objectReferences xmlns:adtcore="http://www.sap.com/adt/core"><adtcore:objectReference adtcore:type="${serviceType}" adtcore:name="${serviceBindingName}"/></adtcore:objectReferences>`;
    }
    /**
     * Publish the service binding.
     *
     * @param type - The type of the service binding.
     * @param bindingName - The name of the service binding.
     * @returns The response status message.
     */
    publish(type, bindingName) {
        return __awaiter(this, void 0, void 0, function* () {
            const content = this.buildServiceBindingContent(type, bindingName);
            const response = yield this.post(`/publishjobs`, content, {
                headers: {
                    'Content-Type': 'application/xml',
                    Accept: 'application/xml, application/vnd.sap.as+xml;charset=UTF-8;dataname=com.sap.adt.StatusMessage'
                }
            });
            const data = this.parseResponse(response.data);
            return data['abap']['values']['DATA'];
        });
    }
}
exports.PublishService = PublishService;
/**
 * @see AdtService.getAdtCatagory()
 */
PublishService.adtCategory = {
    scheme: 'http://www.sap.com/categories/servicebindings/bindingtypes',
    term: 'ODataV4'
};
//# sourceMappingURL=publish-service.js.map